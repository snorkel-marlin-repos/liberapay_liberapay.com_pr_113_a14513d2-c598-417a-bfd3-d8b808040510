import os
import re
from urlparse import urlsplit

import sass

filename = os.path.join(website.project_root, 'style/base/base.scss')
output_style = 'compressed' if website.env.compress_assets else 'nested'

def url_sub(m):
    url = urlsplit(m.group(2))
    if url.scheme or url.netloc:
        # We need both tests because "//example.com" has no scheme and "data:"
        # has no netloc. In either case, we want to leave the URL untouched.
        return m.group(0)
    repl = website.asset(url.path) + (url.query and '&'+url.query) + (url.fragment and '#'+url.fragment)
    return 'url({0}{1}{0})'.format(m.group(1), repl)

url_re = re.compile(r"""\burl\((['"])(.+?)['"]\)""")
[---]
css = sass.compile(output_style=str(output_style),filename=str(filename))
if website.env.cache_static:
    css = url_re.sub(url_sub, css)
[---] via stdlib_format
{css}

"""An endpoint to receive Mangopay's callbacks.

Doc: https://docs.mangopay.com/api-references/notifications/
"""

from aspen import Response

from liberapay.billing import mangoapi
from liberapay.billing.exchanges import record_exchange_result, repr_error
from liberapay.models.participant import Participant

[---]

try:
    event, status = request.qs['EventType'].rsplit('_', 1)
except ValueError:
    raise Response(400, "bad EventType")
RessourceId = request.qs['RessourceId']

if event == 'PAYOUT_NORMAL':
    payout = mangoapi.payOuts.Get(RessourceId)
    if payout.Status != status:
        raise Response(400, "status mismatch")
    status = status.lower()
    e_id = payout.Tag
    e_status = website.db.one("SELECT status FROM exchanges WHERE id = %s", (e_id,))
    if e_status == status:
        raise Response(200, "already done")
    error = repr_error(payout)
    p = Participant._from_thing("mangopay_user_id", payout.AuthorId)
    if status == 'failed' and p.status == 'closed':
        p.update_status('active')
    record_exchange_result(website.db, e_id, status, error, p)
    if status != 'succeeded':
        e = website.db.one("SELECT * FROM exchanges WHERE id = %s", (e_id,))
        p.notify('withdrawal_'+status, exchange=e._asdict())

[---] text/plain
